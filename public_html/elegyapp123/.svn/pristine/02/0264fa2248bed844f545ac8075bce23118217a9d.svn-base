<?php if (!defined('BASEPATH')) exit('No direct script access allowed');

class Park_model extends CI_Model {

	private $park_table	= "dog_parks"; 	// main model table 	
	
	public function __construct()
	{
		
	}	
	
	/**
	* Function to get all Parks
	*
	* @author	Shashank
	* @param	none
	* @return	array
	*/	
	public function parks_listing($param)
	{
		if(isset($param['action']) && $param['action']=='categorySearch') {
			$this->db->like("{$this->park_table}.parkName",$param['text_search'],'after');
		}
		$response = $this->db->get($this->park_table);
		if($response->num_rows()>0)
		{
			$result['categoryList'] = $response->result();
			$result['message'] = "success";
			$result['status'] = 200;
		}
		else
		{
			$result['message'] = "No Park found.";
			$result['status'] = 202;
		}
		return $result;
	}
	
	/**
	* Function to Counting the number of Park
	*
	* @author        Shashank
	* @param         array
	* @return        array
	*/
    public function record_count($searchStr = NULL) 
	{
		if(isset($searchStr)){
		$this->db->like('parkName', $searchStr,'after');

		}
		$this->db->select("{$this->park_table}.parkId,parkName,parkAddress,parkLatitude,parklongitude"); $count = $this->db->count_all_results($this->park_table);
		//echo $this->db->last_query();
		return $count;
    }
	

	/**
	* Function to LISTING
	*
	* @author      Shashank
	* @param        var,var,var
	* @return       array
	*/
    public function all_parks($limit, $start,$searchStr)
	{        
		if(isset($searchStr)){
			$this->db->like('parkName', $searchStr,'after');
			
		}
		
		if($start!=0){
				$start = (($start-1) * $limit);
		}  
	   
		$this->db->limit($limit, $start);
		$this->db->order_by("parkName", "asc");
		$this->db->select("{$this->park_table}.parkId,parkName,parkAddress,parkLatitude,parklongitude");                        
		$response = $this->db->get($this->park_table);                
		//echo $this->db->last_query();
		return $response->result_array();
	}
	
	/**
	* Function to add single Park 
	*
	* @author	Shashank
	* @param	array
	* @return	array
	*/	
	public function add_park($param)
	{
		$fields = array();
		
		$fields['parkName'] = $param['parkName'];
		$fields['parkAddress'] = $param['parkAddress'];
		$fields['parkLatitude'] = $param['parkLatitude'];
		$fields['parkLongitude'] = $param['parkLongitude'];
		$fields['parkCreateTime'] = date('Y-m-d H:i:s');
		$res_ins = $this->db->insert($this->park_table, $fields);
		if($res_ins){
			$result['parkInfo'] = $this->get_park($fields);
			
			$result['message'] = "success";
			$result['status'] = 200;
		}else{
			$result['message'] = "There is something wrong, try after sometime.";
			$result['status'] = 202;
		}
		//pr($result);
		return $result;
	}
	
	/**
	* Function to get single Park
	*
	* @author	Shashank
	* @param	array
	* @return	object array
	*/
	public function get_park($param)
	{
		$this->db->order_by("{$this->park_table}.parkName", "asc");	
		$this->db->select("{$this->park_table}.parkId,parkName,parkAddress,parkLatitude,parklongitude"); $response = $this->db->get($this->park_table);
		return $response->result();
	}
	
	/**
	* Function to update the Park
	*
	* @author        Shashank
	* @param         array
	* @return        array
	*/
	public function update_park($param)
	{
		$fields = array();
	   // pr($param);
		
		$fields['parkName'] = $param['parkName'];
		$fields['parkAddress'] = $param['parkAddress'];  
        $fields['parkLongitude'] = $param['parkLongitude'];
		$fields['parkLatitude'] = $param['parkLatitude'];		
		$res_ins=$this->db->where('parkId',$param['parkId']);
		$res_ins = $this->db->update($this->park_table, $fields);
		if($res_ins){
				$result['categoryInfo'] = $this->get_park($fields);
				$result['message'] = "success";
				$result['status'] = 200;
		}else{
				$result['message'] = "Insert query failed.";
				$result['status'] = 202;
		}
		return $result;
	}
		/**
	* Function to Park detail
	*
	* @author        Shashank
	* @param         var
	* @return        array
	*/
    public function park_detail($id)
    {        
        if(isset($id))
        { 
			$this->db->select("{$this->park_table}.parkId,parkName,parkAddress,parkLongitude,parkLatitude");     
			$this->db->where('parkId',$id);                
			$response = $this->db->get($this->park_table);                
			//echo $this->db->last_query();
			return $response->result_array();
        }
    }
	 
    

	 
	/**
	* Function to deleting the Park
	*
	* @author        Shashank
	* @param         var
	* @return        array
	*/ 
	function park_delete($id)
    {
		return $this->db->delete($this->park_table, array('parkId' => $id));
    }



}
	