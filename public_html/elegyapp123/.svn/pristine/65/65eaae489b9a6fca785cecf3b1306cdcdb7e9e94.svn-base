<?php if (!defined('BASEPATH')) exit('No direct script access allowed');

class Advertisement_model extends CI_Model {

	private $advertisement_table	        = "advertisements"; 	// main model table 	
	private $advertisement_zipcode_table	= "advertisement_zipcodes"; 
	private $user_table                     = "users";                 //user table
	private $wishtype_pet = 2;
    private $wishtype_product=1;
    private $distance 	=20;
	public function __construct()
	{
		
	}	
	/**
	* Function to listing wishlist products
	*	
	* @author        KS
	* @param         array
	* @return        array
	*/
	public function ads_listing($param)
	{
	
	
		$start =0;
    	$limit = -1;
    	$zipCode =0;
    	
    	if(isset($param['zipCode']))
    	$zipCode = $param['zipCode'];
    	
    	if(isset($param['start']))
    	$start =$param['start'];
    	
    	if(isset($param['limit']))
    	$limit=$param['limit'];
	
		if($start!=0){
		$start = (($start-1) * $limit);
		}  
		if($limit >0 )
		{
			//Apply limit only when it is requested
			$this->db->limit($limit, $start);
		}	
		if($zipCode  != 0  )
		{
			$this->db->select("{$this->advertisement_table}.*");
			//$this->db->select("{$this->advertisement_table}.*, ((ACOS( SIN( ".$param['userLatitude']." * PI( ) /180 ) * SIN( {$this->advertisement_table}.latitude * PI( ) /180 ) + COS( ".$param['userLatitude']." * PI( ) /180 ) * COS( {$this->advertisement_table}.latitude * PI( ) /180 ) * COS(( ".$param['userLongitude']." - {$this->advertisement_table}.longitude ) * PI( ) /180 ) ) *180 / PI( )) *60 * 1.1515) AS distance");
			
			$this->db->join($this->advertisement_zipcode_table,"{$this->advertisement_zipcode_table}.advertisementId = .". $this->advertisement_table.'.advertisementId');
			$this->db->where("{$this->advertisement_zipcode_table}.zipcode",$zipCode);
			$response = $this->db->get($this->advertisement_table);                
			$result['ads'] = $response->result_array();
			$result['message'] = "success";
			$result['status'] = 200;
		}
		else
		{
			//$this->db->select("{$this->advertisement_table}.*");
			
			//$this->db->select("{$this->advertisement_table}.*, ((ACOS( SIN( ".$param['userLatitude']." * PI( ) /180 ) * SIN( {$this->advertisement_table}.latitude * PI( ) /180 ) + COS( ".$param['userLatitude']." * PI( ) /180 ) * COS( {$this->advertisement_table}.latitude * PI( ) /180 ) * COS(( ".$param['userLongitude']." - {$this->advertisement_table}.longitude ) * PI( ) /180 ) ) *180 / PI( )) *60 * 1.1515) AS distance");
			
			//$this->db->where("distance ", '2731.5893127302584');
			//$response = $this->db->get($this->advertisement_table);    
			
			//$sql = "select *, ((ACOS( SIN( ".$param['userLatitude']." * PI( ) /180 ) * SIN( {$this->advertisement_table}.latitude * PI( ) /180 ) + COS( ".$param['userLatitude']." * PI( ) /180 ) * COS( {$this->advertisement_table}.latitude * PI( ) /180 ) * COS(( ".$param['userLongitude']." - {$this->advertisement_table}.longitude ) * PI( ) /180 ) ) *180 / PI( )) *60 * 1.1515) AS distance from ".$this->advertisement_table." where ((ACOS( SIN( ".$param['userLatitude']." * PI( ) /180 ) * SIN( {$this->advertisement_table}.latitude * PI( ) /180 ) + COS( ".$param['userLatitude']." * PI( ) /180 ) * COS( {$this->advertisement_table}.latitude * PI( ) /180 ) * COS(( ".$param['userLongitude']." - {$this->advertisement_table}.longitude ) * PI( ) /180 ) ) *180 / PI( )) *60 * 1.1515) <= 20 "; 
			$sql = "select * from ".$this->advertisement_table." where ((ACOS( SIN( ".$param['userLatitude']." * PI( ) /180 ) * SIN( {$this->advertisement_table}.latitude * PI( ) /180 ) + COS( ".$param['userLatitude']." * PI( ) /180 ) * COS( {$this->advertisement_table}.latitude * PI( ) /180 ) * COS(( ".$param['userLongitude']." - {$this->advertisement_table}.longitude ) * PI( ) /180 ) ) *180 / PI( )) *60 * 1.1515) <= 20 "; 
			
			$response = $this->db->query($sql);           
			$result['ads'] = $response->result_array();
			$result['message'] = "No result found";
			$result['status'] = 200;
		}
		
		return $result;	
	
	
	}
	
		
	/**
	* Function to get all advertisements
	*
	* @author	KS
	* @param	none
	* @return	array
	*/	
	public function advertisement_listing($param)
	{
		if(isset($param['action']) && $param['action']=='advertisementSearch') {
			$this->db->like("{$this->advertisement_table}.companyName",$param['text_search'],'after');
		}
		$response = $this->db->get($this->advertisement_table);
		if($response->num_rows()>0)
		{
			$result['advertisementList'] = $response->result();
			$result['message'] = "success";
			$result['status'] = 200;
		}
		else
		{
			$result['message'] = "No advertisement found.";
			$result['status'] = 202;
		}
		return $result;
	}
	
	/**
	* Function to Counting the number of advertisement
	*
	* @author        Shashank
	* @param         array
	* @return        array
	*/
    public function record_count($searchStr = NULL) 
	{
		if(isset($searchStr)){
		$this->db->like('companyName', $searchStr,'after');

		}
		$this->db->select("{$this->advertisement_table}.advertisementId,companyName,advertisementImage,companyAddress,street,city,state,country,zipcode,linkUrl");
		 $count = $this->db->count_all_results($this->advertisement_table);
		//echo $this->db->last_query();
		return $count;
    }
	

	/**
	* Function to LISTING
	*
	* @author      Shashank
	* @param        var,var,var
	* @return       array
	*/
    public function all_advertisement($limit, $start,$searchStr)
	{        
		if(isset($searchStr)){
			$this->db->like('companyName', $searchStr,'after');
			
		}
		
		if($start!=0){
				$start = (($start-1) * $limit);
		}  
	   
		$this->db->limit($limit, $start);
		$this->db->order_by("companyName", "asc");
		$this->db->select("{$this->advertisement_table}.advertisementId,companyName,advertisementImage,companyAddress,street,city,state,country,zipcode,linkUrl");                        
		$response = $this->db->get($this->advertisement_table);                
		//echo $this->db->last_query();
		return $response->result_array();
	}
	
	/**
	* Function to add single advertisement
	*
	* @author	Shashank
	* @param	array
	* @return	array
	*/	
	public function add_advertisement($param,$fields1,$field3)
	{
		
		$fields = array();
		$fields['companyName'] = $param['companyName'];
		
		$fields['companyAddress'] = $param['companyAddress'];
		$fields['street'] = $param['street'];
		$fields['city'] = $param['city'];
		$fields['state'] = $param['state'];
		$fields['country'] = $param['country'];
		$fields['zipcode'] = $param['zipcode'];
		$fields['linkUrl'] = $param['linkUrl'];
		$fields['latitude'] = $param['latitude'];
		$fields['longitude'] = $param['longitude'];
		if(!empty($_FILES['advertisementImage']['name'])){
				$target_path = ADVERTISEMENT_IMAGE_PATH;
                $target_path = $target_path .time().'_' . basename(str_replace(' ', '_', $_FILES['advertisementImage']['name'])); 
				$img_resp = move_uploaded_file($_FILES['advertisementImage']['tmp_name'], $target_path);
			    if($img_resp){
						
						$fields['advertisementImage'] = $target_path;
				}else{
						$fields['advertisementImage'] = ADVERTISEMENT_IMAGE_PATH."default.png";
						
				}
		}else{
				$fields['advertisementImage'] = ADVERTISEMENT_IMAGE_PATH."default.png";
		}    
		$fields['advertisementCreateTime'] = date('Y-m-d H:i:s');
		$res_ins = $this->db->insert($this->advertisement_table, $fields);
		$last_id =$this->db->insert_id();
		foreach($fields1 as $val)
		{
			$data['advertisementId']=$last_id;
			$data['zipcode']=$val;
			$res_ins = $this->db->insert($this->advertisement_zipcode_table, $data);
		}
		if($res_ins){
			
			$result['advertisementInfo'] = $this->get_advertisement($fields);
			
			$result['message'] = "success";
			$result['status'] = 200;
		}else{
			$result['message'] = "There is something wrong, try after sometime.";
			$result['status'] = 202;
		}
		//pr($result);
		return $result;
	}
	
	/**
	* Function to get single advertisement
	*
	* @author	Shashank
	* @param	array
	* @return	object array
	*/
	public function get_advertisement($param)
	{
		$this->db->order_by("{$this->advertisement_table}.companyName", "asc");	
		$this->db->select("{$this->advertisement_table}.advertisementId,companyName,advertisementImage,companyAddress,street,city,state,country,zipcode,linkUrl");  
		
		$response = $this->db->get($this->advertisement_table);
		return $response->result();
	}
	
	/**
	* Function to update the advertisement
	*
	* @author        Shashank
	* @param         array
	* @return        array
	*/
	public function update_advertisement($param,$fields2,$field3)
	{
		
		$fields = array();
		$fields['companyName'] = $param['companyName'];
	    $fields['companyAddress'] = $param['companyAddress'];
		$fields['street'] = $param['street'];
		$fields['city'] = $param['city'];
		$fields['state'] = $param['state'];
		$fields['country'] = $param['country'];
		$fields['zipcode'] = $param['zipcode'];
		$fields['latitude'] = $param['latitude'];
		$fields['longitude'] = $param['longitude'];
		$fields['linkUrl'] = $param['linkUrl'];
		 if(!empty($_FILES['advertisementImage']['name'])){
				$target_path = ADVERTISEMENT_IMAGE_PATH;
                			
				$target_path = $target_path .time().'_' . basename(str_replace(' ', '_', $_FILES['advertisementImage']['name'])); 
				$img_resp = move_uploaded_file($_FILES['advertisementImage']['tmp_name'], $target_path);
			    if($img_resp){
						$fields['advertisementImage'] = $target_path;
				}else{
						$fields['advertisementImage'] = ADVERTISEMENT_IMAGE_PATH."default.png";
						
				}
		}else{
				
		}   
		           
		$res_ins=$this->db->where('advertisementId',$param['advertisementId']);
		$res_ins = $this->db->update($this->advertisement_table, $fields);
		
		if($res_ins){
			$res_ins = $this->db->delete($this->advertisement_zipcode_table, array('advertisementId' =>$param['advertisementId']));
				if($res_ins)
				{
					foreach($fields2 as $val)
					{
						$data['advertisementId']=$param['advertisementId'];
						$data['zipcode']=$val;
						$res_ins = $this->db->insert($this->advertisement_zipcode_table, $data);
					}
				}
				$result['advertisementInfo'] = $this->get_advertisement($fields);
				$result['message'] = "success";
				$result['status'] = 200;
		}else{
				$result['message'] = "Insert query failed.";
				$result['status'] = 202;
		}
		return $result;
	}
		/**
	* Function to advertisement detail
	*
	* @author        Shashank
	* @param         var
	* @return        array
	*/
    public function advertisement_detail($id)
    {        
        if(isset($id))
        { 
			$this->db->select("{$this->advertisement_table}.advertisementId,companyName,advertisementImage,companyAddress,longitude,latitude,street,city,state,country,zipcode,linkUrl");     
			$this->db->where('advertisementId',$id);                
			$response = $this->db->get($this->advertisement_table);                
			//echo $this->db->last_query();
			return $response->result_array();
        }
    }
	   
	/**
	* Function to deleting the Advertisement
	*
	* @author        Shashank
	* @param         var
	* @return        array
	*/ 
	function advertisement_delete($id)
    {
		return $this->db->delete($this->advertisement_table, array('advertisementId' => $id));
    }

    /**
	 * get tag name
	 * @author	Shashank
	 * @param var,var
	 * @return	void
	 */
	function get_target_zipcodes($id)
	{
		$response=$this->db->select("{$this->advertisement_zipcode_table}.zipcode");
		$response=$this->db->where('advertisementId', $id);
		$response=$this->db->get($this->advertisement_zipcode_table);
		return $response->result_array();
	}

}
	