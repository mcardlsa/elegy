<?php if (!defined('BASEPATH')) exit('No direct script access allowed');

class Order_model extends CI_Model {


    private $order_table	        = "orders"; // main model table 	
	private $order_item_table		= "order_items";
	private $user_table_name		= "users"; 	
	private $product_table	        = "products";
    private $payment_table	        = "payments";

	/**
	* Function to Counting the number of Active orders
	*
	* @author        Shashank
	* @param         array
	* @return        array
	*/
    public function record_count($searchStr = NULL) 
	{
		if(isset($searchStr)){
		$this->db->like('screenName', $searchStr,'after');

		}
		$this->db->select("{$this->order_table}.orderUniqueId,userId,shippingAddress,orderStatus,orderCreateTime,{$this->user_table_name}.screenName,emailId");     
		$this->db->join($this->user_table_name,"{$this->user_table_name}.userId = .". $this->order_table.'.userId');
		$this->db->where("orders.orderUniqueId != ''"); 
        $this->db->where("{$this->order_table}.orderStatus",0);
        $count = $this->db->count_all_results($this->order_table);
		//echo $this->db->last_query();
		return $count;
    }
	
	/**
	* Function to LISTING Active Orders
	*
	* @author      Shashank
	* @param        var,var,var
	* @return       array
	*/
    public function all_order($limit, $start,$searchStr)
	{        
		if(isset($searchStr)){
			$this->db->like('screenName', $searchStr,'after');
			
		}
		
		if($start!=0){
				$start = (($start-1) * $limit);
		}  
	   
		$this->db->limit($limit, $start);
		$this->db->order_by("orderCreateTime", "desc");
		$this->db->select("{$this->order_table}.orderId,{$this->order_table}.orderUniqueId,{$this->order_table}.userId,{$this->order_table}.shippingAddress,{$this->order_table}.orderStatus,{$this->order_table}.orderCreateTime,{$this->user_table_name}.screenName,emailId");     
		$this->db->join($this->user_table_name,"{$this->user_table_name}.userId = .". $this->order_table.'.userId');
		$this->db->where("orders.orderUniqueId != ''"); 
        $this->db->where("{$this->order_table}.orderStatus",0);
        
        $response = $this->db->get($this->order_table);                
		//echo $this->db->last_query();
		return $response->result_array();
	}
	
    /**
	* Function to Counting the number of Archive orders
	*
	* @author        Shashank
	* @param         array
	* @return        array
	*/
    public function record_count1($searchStr = NULL) 
	{
		if(isset($searchStr)){
		$this->db->like('screenName', $searchStr,'after');

		}
		$this->db->select("{$this->order_table}.orderUniqueId,userId,shippingAddress,orderStatus,orderCreateTime,{$this->user_table_name}.screenName,emailId");     
		$this->db->join($this->user_table_name,"{$this->user_table_name}.userId = .". $this->order_table.'.userId');
		$this->db->where("orders.orderUniqueId != ''"); 
        $this->db->where("{$this->order_table}.orderStatus",1);
        $count = $this->db->count_all_results($this->order_table);
		//echo $this->db->last_query();
		return $count;
    }
	
	/**
	* Function to LISTING Archive orders
	*
	* @author      Shashank
	* @param        var,var,var
	* @return       array
	*/
    public function all_order1($limit, $start,$searchStr)
	{        
		if(isset($searchStr)){
			$this->db->like('screenName', $searchStr,'after');
			
		}
		
		if($start!=0){
				$start = (($start-1) * $limit);
		}  
	   
		$this->db->limit($limit, $start);
		$this->db->order_by("screenName", "asc");
		$this->db->select("{$this->order_table}.orderId,{$this->order_table}.orderUniqueId,{$this->order_table}.userId,{$this->order_table}.shippingAddress,{$this->order_table}.orderStatus,{$this->order_table}.orderCreateTime,{$this->user_table_name}.screenName,emailId");     
		$this->db->join($this->user_table_name,"{$this->user_table_name}.userId = .". $this->order_table.'.userId');
		$this->db->where("orders.orderUniqueId != ''"); 
        $this->db->where("{$this->order_table}.orderStatus",1);
        $response = $this->db->get($this->order_table);                
		//echo $this->db->last_query();
		return $response->result_array();
	}
	  
	/**
	* Function to order detail
	*
	* @author        Shashank
	* @param         var
	* @return        array
	*/
    public function order_detail($id)
    {        
        if(isset($id))
        {
			$this->db->select("{$this->order_table}.orderId,{$this->order_table}.orderUniqueId,{$this->order_table}.currency,{$this->order_table}.totalAmount,{$this->order_table}.userId,{$this->order_table}.shippingAddress,{$this->order_table}.orderStatus,{$this->order_table}.discountAmount,{$this->order_table}.deliveryAmount,{$this->order_table}.taxAmount,{$this->order_table}.orderCreateTime,{$this->user_table_name}.screenName,emailId,{$this->payment_table}.txnId");     
		    $this->db->join($this->user_table_name,"{$this->user_table_name}.userId = .". $this->order_table.'.userId');
		    $this->db->join($this->payment_table,"{$this->payment_table}.orderId = .". $this->order_table.'.orderId');
            $this->db->where("{$this->order_table}.orderId",$id);                
			
            $response = $this->db->get($this->order_table);                
			//echo $this->db->last_query();
			return $response->result_array();
        }
    }
	
	/**
	* Function to order detail
	*
	* @author        Shashank
	* @param         var
	* @return        array
	*/
    public function order_detail2($id)
    {        
        if(isset($id))
        {
			$this->db->select("{$this->order_item_table}.orderQuantity,{$this->order_item_table}.singleProductPrice,{$this->order_item_table}.ProductId,{$this->product_table}.productName");     
		    $this->db->join($this->product_table,"{$this->product_table}.productId = .". $this->order_item_table.'.productId');
		    $this->db->where('orderId',$id);                
			$response = $this->db->get($this->order_item_table);                
			//echo $this->db->last_query();
			return $response->result_array();
        }
    }
	
	/**
	 * Update order status
	 * @author	Shashank
	 * @param var,var
	 * @return	void
	 */	
	function status_update($id,$data)
    {   
		$this->db->where('orderId', $id);
		
		$this->db->update($this->order_table, $data);
		
    }
	
	/**
	 * get Orders by userId
	 * @author	Shashank
	 * @param var,var
	 * @return	array
	 */	
	function get_order($id)
    {   
		$this->db->select("{$this->order_table}.orderId"); 
		$this->db->where('userId', $id);
		$response = $this->db->get($this->order_table);
		$orderId=array();
		foreach($response->result_array() as $val)
		{
			foreach($val as $value)
			{
			 $orderId[]=$value;	
			}
		}
		return $orderId;
		
    }
	
}